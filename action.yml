name: "Setup Varnish HTTP Cache"
description: "Setup Varnish HTTP Cache"
author: "varnishcache-friends"
inputs:
  version:
    description: "Varnish HTTP Cache version to use"
    default: "master"
  make-jobs:
    description: "Number of jobs (commands) to run simultaneously"
    default: 4
runs:
  using: composite
  steps:
    - name: Unsupported platform
      if: runner.os == 'Windows'
      shell: bash
      run: |
        echo "unsupported platform"
        exit 1
    - name: Install dependencies
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libedit-dev \
          python3-docutils \
          python3-sphinx
    - name: Install dependencies
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install \
          automake \
          docutils \
          pcre \
          sphinx-doc
        echo "/usr/local/opt/sphinx-doc/bin" >> $GITHUB_PATH
    - name: Determine refname
      id: refs
      shell: bash
      run: |
        refname=${{ inputs.version }}
        if [[ $refname =~ [0-9]+\.[0-9]+\.[0-9]+ ]]; then
          refname="varnish-$refname"
        fi
        echo "REFNAME=$refname" >> $GITHUB_OUTPUT
    - uses: actions/checkout@v4
      with:
        repository: "varnishcache/varnish-cache"
        ref: ${{ steps.refs.outputs.REFNAME }}
    - name: Build and install varnish-cache
      shell: bash
      run: |
        ./autogen.sh
        ./configure --localstatedir=/var/lib
        make -j${{ inputs.make-jobs }}
        sudo make install
    - name: Run ldconfig
      if: runner.os == 'Linux'
      shell: bash
      run: sudo ldconfig
    - name: Display version and revision built
      shell: bash
      run: /usr/local/sbin/varnishd -V
    - name: Cleanup
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get purge -y \
          libedit-dev \
          python3-docutils \
          python3-sphinx
    - name: Cleanup
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew uninstall \
          automake \
          docutils \
          sphinx-doc
